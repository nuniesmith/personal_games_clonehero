Summary of Standardized Structure

    Multi-Stage Build:
        First stage installs all dependencies.
        Second stage copies only essentials for a lean runtime image.

    Environment Variables and Arguments:
        Use ENV for runtime settings and ARG for build-time configurations.

    System and Python Dependencies:
        Install required packages in the build stage; include only runtime essentials in the final image.

    Application Code Organization:
        Use specific paths for copying necessary files to ensure a modular setup.

    Non-Root User:
        Create a dedicated user for running services, improving security.

    Health Checks:
        Set up health checks to validate service readiness.

    Default Entrypoint:
        Define a consistent command to start each service.

This structure can be applied to other microservices by changing environment
variables, dependency lists, and any service-specific files in the COPY and 
CMD directives. This standardization ensures that each microservice is consistent, secure, and optimized for performance.